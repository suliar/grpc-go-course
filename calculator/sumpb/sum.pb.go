// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/sumpb/sum.proto

package sumpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sum struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sum) Reset()         { *m = Sum{} }
func (m *Sum) String() string { return proto.CompactTextString(m) }
func (*Sum) ProtoMessage()    {}
func (*Sum) Descriptor() ([]byte, []int) {
	return fileDescriptor_271ad2b08a2bc1c2, []int{0}
}

func (m *Sum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sum.Unmarshal(m, b)
}
func (m *Sum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sum.Marshal(b, m, deterministic)
}
func (m *Sum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sum.Merge(m, src)
}
func (m *Sum) XXX_Size() int {
	return xxx_messageInfo_Sum.Size(m)
}
func (m *Sum) XXX_DiscardUnknown() {
	xxx_messageInfo_Sum.DiscardUnknown(m)
}

var xxx_messageInfo_Sum proto.InternalMessageInfo

func (m *Sum) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *Sum) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type DoSumRequest struct {
	Sum                  *Sum     `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoSumRequest) Reset()         { *m = DoSumRequest{} }
func (m *DoSumRequest) String() string { return proto.CompactTextString(m) }
func (*DoSumRequest) ProtoMessage()    {}
func (*DoSumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_271ad2b08a2bc1c2, []int{1}
}

func (m *DoSumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoSumRequest.Unmarshal(m, b)
}
func (m *DoSumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoSumRequest.Marshal(b, m, deterministic)
}
func (m *DoSumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoSumRequest.Merge(m, src)
}
func (m *DoSumRequest) XXX_Size() int {
	return xxx_messageInfo_DoSumRequest.Size(m)
}
func (m *DoSumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoSumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoSumRequest proto.InternalMessageInfo

func (m *DoSumRequest) GetSum() *Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

type DoSumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoSumResponse) Reset()         { *m = DoSumResponse{} }
func (m *DoSumResponse) String() string { return proto.CompactTextString(m) }
func (*DoSumResponse) ProtoMessage()    {}
func (*DoSumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_271ad2b08a2bc1c2, []int{2}
}

func (m *DoSumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoSumResponse.Unmarshal(m, b)
}
func (m *DoSumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoSumResponse.Marshal(b, m, deterministic)
}
func (m *DoSumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoSumResponse.Merge(m, src)
}
func (m *DoSumResponse) XXX_Size() int {
	return xxx_messageInfo_DoSumResponse.Size(m)
}
func (m *DoSumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoSumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoSumResponse proto.InternalMessageInfo

func (m *DoSumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Sum)(nil), "sum.Sum")
	proto.RegisterType((*DoSumRequest)(nil), "sum.DoSumRequest")
	proto.RegisterType((*DoSumResponse)(nil), "sum.DoSumResponse")
}

func init() {
	proto.RegisterFile("calculator/sumpb/sum.proto", fileDescriptor_271ad2b08a2bc1c2)
}

var fileDescriptor_271ad2b08a2bc1c2 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0x45, 0x02, 0x9a, 0x0b, 0x0c, 0xde, 0xc1, 0x18, 0x26, 0xc5, 0x41, 0xe3, 0x80, 0x06,
	0x37, 0x37, 0x8d, 0xab, 0x0e, 0xb0, 0xb9, 0x18, 0xc0, 0x9a, 0x90, 0x50, 0xda, 0xd7, 0xdb, 0xfb,
	0xff, 0x5f, 0x7a, 0xe1, 0x25, 0x2c, 0x4d, 0x7a, 0xfa, 0xf5, 0x7c, 0x39, 0x50, 0x8e, 0xfd, 0x3c,
	0xf2, 0xdc, 0x7b, 0xe3, 0x9e, 0x89, 0xb5, 0x1d, 0xc2, 0x59, 0x5b, 0x67, 0xbc, 0xc1, 0x98, 0x58,
	0x57, 0x5f, 0x10, 0x77, 0xac, 0xf1, 0x0e, 0xf2, 0xff, 0xc9, 0x91, 0xff, 0x5d, 0x58, 0x0f, 0xca,
	0xdd, 0x44, 0xb7, 0xd1, 0x63, 0xd2, 0x66, 0x92, 0x7d, 0x4b, 0x84, 0xf7, 0x50, 0x90, 0x1a, 0xcd,
	0xf2, 0x77, 0x62, 0xce, 0x85, 0xc9, 0xd7, 0x70, 0x85, 0xaa, 0x27, 0xc8, 0x3f, 0x4d, 0xc7, 0xba,
	0x55, 0x07, 0x56, 0xe4, 0xb1, 0x84, 0x60, 0x91, 0xba, 0xac, 0xb9, 0xac, 0x83, 0x3c, 0xbc, 0x8a,
	0xfa, 0x01, 0x8a, 0x8d, 0x25, 0x6b, 0x16, 0x52, 0x78, 0x0d, 0xa9, 0x53, 0xc4, 0xb3, 0xdf, 0xf4,
	0xdb, 0xad, 0x79, 0x83, 0xb4, 0x63, 0xfd, 0x6e, 0x27, 0x7c, 0x81, 0x44, 0xbe, 0xe0, 0x95, 0x54,
	0xed, 0x55, 0x25, 0xee, 0xa3, 0xb5, 0xb1, 0x3a, 0xfb, 0xb8, 0xf8, 0x49, 0x64, 0xf7, 0x90, 0xca,
	0xe8, 0xd7, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x83, 0x76, 0xfd, 0x12, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SumApiClient is the client API for SumApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumApiClient interface {
	DoSum(ctx context.Context, in *DoSumRequest, opts ...grpc.CallOption) (*DoSumResponse, error)
}

type sumApiClient struct {
	cc grpc.ClientConnInterface
}

func NewSumApiClient(cc grpc.ClientConnInterface) SumApiClient {
	return &sumApiClient{cc}
}

func (c *sumApiClient) DoSum(ctx context.Context, in *DoSumRequest, opts ...grpc.CallOption) (*DoSumResponse, error) {
	out := new(DoSumResponse)
	err := c.cc.Invoke(ctx, "/sum.SumApi/DoSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumApiServer is the server API for SumApi service.
type SumApiServer interface {
	DoSum(context.Context, *DoSumRequest) (*DoSumResponse, error)
}

// UnimplementedSumApiServer can be embedded to have forward compatible implementations.
type UnimplementedSumApiServer struct {
}

func (*UnimplementedSumApiServer) DoSum(ctx context.Context, req *DoSumRequest) (*DoSumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoSum not implemented")
}

func RegisterSumApiServer(s *grpc.Server, srv SumApiServer) {
	s.RegisterService(&_SumApi_serviceDesc, srv)
}

func _SumApi_DoSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DoSumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumApiServer).DoSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumApi/DoSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumApiServer).DoSum(ctx, req.(*DoSumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.SumApi",
	HandlerType: (*SumApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoSum",
			Handler:    _SumApi_DoSum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/sumpb/sum.proto",
}
